# Rime schema
# encoding: utf-8
# 朙月拼音自定義修改，用於自帶的默認朙月拼音
# 参考定制指南 https://github.com/rime/home/wiki/RimeWithSchemata#%E5%AE%9A%E8%A3%BD%E6%8C%87%E5%8D%97
patch:
    # 增加emoji https://github.com/rime/rime-emoji/tree/master
  emoji:
    opencc_config: emoji.json
    option_name: emoji
    tips: none
    inherit_comment: false
  # 结束emoji
  #
  dependencies:
    - melt_eng
  #
  translator/dictionary: luna_pinyin.extended   # 使用词库luna_pinyin.extended.dict.yml以扩展词库
  translator/enable_user_dict: true       # 启用用户词典，动态词频
  translator/nitial_quality: 1.5
  translator/contextuals: true  # 开启八股文
  translator/enable_charset_filter: true  # 过滤生僻字
  #translator:
  #  initial_quality: 1.2          # 拼音的权重应该比英文大
  #  dictionary: luna_pinyin     # 挂载词库 melt_eng.dict.yaml
  #  contextuals: true  # 开启八股文
  #  preedit_format:
  #  - xform/([nl])v/$1ü/
  #  - xform/([nl])ue/$1üe/
  #  - xform/([jqxy])v/$1u/
  
  # 次翻译器，英文
  melt_eng:
    dictionary: melt_eng     # 挂载词库 melt_eng.dict.yaml
    enable_sentence: false   # 禁止造句
    enable_user_dict: true  # 启用用户词典，动态词频
    initial_quality: 0     # 初始权重
    comment_format:          # 自定义提示码
      - xform/.*//           # 清空提示码
  #
  switches/@2/reset: 1    #表示將 switcher 列表中的第三個元素（即 simplification 開關）的初始值重設爲狀態1（即「简体」）。
  switches/@next:         #表示在 switcher 列表中最后增加一个项目
    name: emoji
    reset: 1
    states: [ "🈚︎", "🈶️" ]
  #
  switches/@after 4:
    options: [utf8, gbk, gb2312]    # (※2) 字符集选单 
    reset: 1                        # 默认 GBK
    states:                         # 可以通过切功能键，切至 UTF8 等超大字符集
      - UTF-8
      - GBK
      - GB2312
  #
  engine/processors/@before 0:
    lua_processor@select_character      # 以词定字

  #
  engine/translators/@after 0:
    lua_translator@date_translator      # 时间、日期、星期
  engine/translators/@after 1:
    lua_translator@lunar                # 农历
  engine/translators/@after 2:
    table_translator@melt_eng           # 英文输入
  engine/translators/@after 3:
    lua_translator@cn_en                # 中英混合词汇
  engine/translators/@after 4:
    lua_translator@unicode              # Unicode
  engine/translators/@after 5:
    lua_translator@number_translator    # 数字、金额大写
  engine/translators/@after 6:
    lua_translator@custom_phrase        # 自定义短语 custom_phrase.txt

  #
  engine/filters/@before 0:
    simplifier@emoji                    # Emoji
  engine/filters/@before 1:
    simplifier@traditionalize           # 简繁切换
  engine/filters/@before 2:
    lua_filter@v_filter                 # v 模式 symbols 优先（否则是英文优先）
  engine/filters/@before 3:
    lua_filter@autocap_filter           # 英文自动大写
  engine/filters/@before 4:
    lua_filter@reduce_english_filter    # 降低部分英语单词在候选项的位置
  engine/filters/@before 5:
    lua_filter@long_word_filter         # 长词优先
  engine/filters/@before 6:
    lua_filter@corrector                # 错音错字提示 
  engine/filters/@before 7:
    lua_filter@pin_cand_filter          # 置顶候选项（顺序要求：置顶候选项 > Emoji > 简繁切换）
  engine/filters/@before 8:
    lua_filter@pin_cand_filter          # 置顶候选项（顺序要求：置顶候选项 > Emoji > 简繁切换）


  # 反查：两分（拼字）
  liangfen:
    dictionary: liangfen     # 挂载两分词典 liangfen.dict.yaml
    prefix: "u"              # 以 u 开头来反查
    enable_completion: true  # 补全提示
    # tips: 〔两分〕          # 反查时显示的文字，建议注释掉，否则很多 u 开头的英文单词也会显示这个
  
  # Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
  date_translator:
    date: rq       # 日期： 2022-11-29
    time: sj       # 时间： 18:13
    week: xq       # 星期： 星期二
    datetime: dt   # ISO 8601： 2022-11-29T18:13:11+08:00
    timestamp: ts  # 时间戳： 1669716794
  
  # Lua 配置: 长词优先，提升 count 个词语，插入到第 idx 个位置。
  # 示例：将 2 个词插入到第 4、5 个候选项，输入 jie 得到「1接 2解 3姐 4饥饿 5极恶」
  long_word_filter:
    count: 2
    idx: 4
  
  # Lua 配置: 降低部分英语单词在候选项的位置
  # 详细介绍 https://dvel.me/posts/make-rime-en-better/#短单词置顶的问题
  # 正常情况： 输入 rug 得到 「1.rug 2.如果 …… 」
  # 降低之后： 输入 rug 得到 「1.如果 2.rug …… 」
  reduce_english_filter:
    # 降低到第 idx 个位置
    idx: 2
    # 要降低的单词，匹配的是输入码，即全小写。
    words: [rug, bus, ship, laos, bail, bam, bans, bib, bos, chic, chit, dab, dag,
    dal, dit, dub, dug, fab, gam, ger, gus, hem, hep, hud, kat, lam, lax, lex, lug,
    lux, moc, mos, mot, mum, nad, nay, nib, nip, pak, pap, pax, rig, rum, sac, sal,
    sax, sec, shin, sis, ska, slang, sus, tad, taj, tac, tic, yep, yum, fax, cain,
    key, mob, buy, dam, wap, yes, but, put, lag, buf, lip, aid, aim, dig, dim, din,
    dip, pail, cad, chap, bend]

  punctuator:
    full_shape:
      '\': "、"
      "/" : [ ／, "/", ÷ ]
      __include: default:/punctuator/full_shape  # 从 default.yaml 导入配置
    half_shape:
      '\': "、"
      "/" : [ "/", ／, ÷ ]
      __include: default:/punctuator/half_shape  # 从 default.yaml 导入配置
    symbols:
      __include: symbols_v:/symbols              # 从 symbols_v.yaml 导入配置

  recognizer/patterns:
    punct: "^v([0-9]|10|[A-Za-z]+)$"  # 响应 symbols_v.yaml 的 symbols，用 'v' 替换 '/'
    reverse_lookup: "`[a-z]*'?$"
    unicode: "^U[a-f0-9]+"            # 响应 Unicode
    number: "^R[0-9]+[.]?[0-9]*"      # 响应 number_translator
    
  